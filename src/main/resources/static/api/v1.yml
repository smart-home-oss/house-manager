openapi: 3.0.1
info:
  title: Smart Home
  description: 'This application gives the possibility to manage a house via http interface'
  contact:
    url: https://github.com/rodislav/smart-home
  version: 0.1.0
servers:
  - url: http://localhost:8080/api/v1
tags:
  - name: houses
    description: Manage houses
  - name: rooms
    description: Manage rooms
paths:
  /houses:
    post:
      tags:
        - houses
      summary: Create new house
      operationId: createHouse
      requestBody:
        description: A house object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/House'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/House'
        400:
          description: Bad request, check the response body for details
          content: {}
  /houses/{id}:
    get:
      tags:
        - houses
      summary: Get a house by Id
      description: Returns a single house
      operationId: getHouseById
      parameters:
        - name: id
          in: path
          description: Id of House to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/jon:
              schema:
                $ref: '#/components/schemas/House'
        400:
          description: No house found with id - 'id'
    put:
      tags:
        - houses
      summary: Update a house by Id
      description: Returns updated house
      operationId: updateHouseById
      parameters:
        - name: id
          in: path
          description: Id of House to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: A house object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/House'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/House'
        400:
          description: Bad request, check the response body for details
          content: {}
    delete:
      tags:
        - houses
      summary: Delete a house by Id
      description: Return nothing
      operationId: deleteHouseById
      parameters:
        - name: id
          in: path
          description: Id of House to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content: {}
        400:
          description: Bad request, check the response body for details
          content: {}
  /rooms:
    post:
      tags:
        - rooms
      summary: Create new room
      operationId: create
      requestBody:
        description: A room object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Room'
        400:
          description: Bad request, check the response body for details
          content: {}
  /rooms/{id}:
    get:
      tags:
        - rooms
      summary: Get a room by Id
      description: Returns a single room
      operationId: show
      parameters:
        - name: id
          in: path
          description: Id of Room to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/jon:
              schema:
                $ref: '#/components/schemas/Room'
        400:
          description: No room found with id - 'id'
    put:
      tags:
        - rooms
      summary: Update a room by Id
      description: Returns updated room
      operationId: update
      parameters:
        - name: id
          in: path
          description: Id of Room to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: A room object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Room'
        400:
          description: Bad request, check the response body for details
          content: {}
    delete:
      tags:
        - rooms
      summary: Delete a room by Id
      description: Return nothing
      operationId: destroy
      parameters:
        - name: id
          in: path
          description: Id of Room to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content: {}
        400:
          description: Bad request, check the response body for details
          content: {}
components:
  schemas:
    House:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          format: My summer house
        street:
          type: string
          format: Mont√©e Haute
        number:
          type: string
          format: date-time
        postCode:
          type: string
          description: L-6969
      xml:
        name: Order
    Room:
      type: object
      properties:
        id:
          type: integer
          format: int64
        houseId:
          type: integer
          format: int64
        name:
          type: string
          format: My room
      xml:
        name: Room